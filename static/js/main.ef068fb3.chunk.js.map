{"version":3,"sources":["components/CongressionalDistricts.js","components/ElectionDates.js","components/LeftMenu.js","components/LegislativeDistricts.js","components/Splash.js","components/StateJudicialCandidates.js","components/UsSenate.js","components/VotingInElections.js","App.js","serviceWorker.js","index.js"],"names":["CongressionalDistricts","ElectionDates","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","ListItemLink","props","ListItem","button","component","LeftMenu","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","noWrap","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","List","href","ListItemText","primary","Divider","map","text","index","key","target","rel","LegislativeDistricts","Splash","StateJudicialCandidates","UsSenate","VotingInElections","App","exact","path","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef068fb3.chunk.js","sourcesContent":["import React from 'react';\n\nconst CongressionalDistricts = () => {\n    return (\n        <div>Congressional Districts</div>\n    );\n}\n\nexport default CongressionalDistricts","import React from 'react';\n\nconst ElectionDates = () => {\n    return (\n        <div>Election Dates</div>\n    );\n}\n\nexport default ElectionDates","import React, { useState, useEffect } from 'react';\nimport { AppBar, CssBaseline, Divider, Drawer, List, ListItem, ListItemText, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport { Menu, ChevronLeft, ChevronRight } from '@material-ui/icons';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n\n}));\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nconst LeftMenu = () => {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar> \n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            VOTE AZ\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <List >\n            <ListItemLink href=\"ElectionDates\">\n            <ListItemText primary=\"Election Dates\" />\n          </ListItemLink>\n        </List>\n        <List >\n            <ListItemLink href=\"VotingInElections\">\n            <ListItemText primary=\"Voting in Elections\" />\n          </ListItemLink>\n        </List>\n        <List >\n            <ListItemLink href=\"CongressionalDistricts\">\n            <ListItemText primary=\"Congressional Districts\" />\n          </ListItemLink>\n        </List>\n        <List >\n            <ListItemLink href=\"LegislativeDistricts\">\n            <ListItemText primary=\"Legislative Districts\" />\n          </ListItemLink>\n        </List>\n        <List >\n            <ListItemLink href=\"StateJudicialCandidates\">\n            <ListItemText primary=\"State Judicial Candidates\" />\n          </ListItemLink>\n        </List>\n        <List >\n            <ListItemLink href=\"USsenate\">\n            <ListItemText primary=\"US Senate\" />\n          </ListItemLink>\n        </List>\n        <Divider />\n        <List>\n          {['Books', 'Videos', 'Podcasts', 'Biz to Support'].map((text, index) => (\n            <ListItem button key={text}>\n              {/* <ListItemIcon>{index % 2 === 0 ? <Inbox /> : <Mail />}</ListItemIcon> */}\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n        <a\n            className=\"App-link\"\n            href=\"https://www.azcleanelections.gov/arizona-elections\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            >\n            Upcoming Elections\n        </a>\n    </div>\n    );\n}\n\nexport default LeftMenu;","import React from 'react';\n\nconst LegislativeDistricts = () => {\n    return (\n        <div>LegislativeDistricts LD 389238429348</div>\n    );\n}\n\nexport default LegislativeDistricts","import React from 'react';\n\nconst Splash = () => {\n  \n  return (\n    <div>\n      This is the Splish SPLASH Page\n    </div>\n    );\n}\n\nexport default Splash;","import React from 'react';\n\nconst StateJudicialCandidates = () => {\n    return (\n        <div>State Judicial Candidates</div>\n    );\n}\n\nexport default StateJudicialCandidates","import React from 'react';\n\nconst UsSenate = () => {\n    return (\n        <div>US Senate</div>\n    );\n}\n\nexport default UsSenate","import React from 'react';\n\nconst VotingInElections = () => {\n    return (\n        <div>Voting in Elections</div>\n    );\n}\n\nexport default VotingInElections","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport CongressionalDistricts from './components/CongressionalDistricts';\nimport ElectionDates from './components/ElectionDates';\nimport LeftMenu from './components/LeftMenu';\nimport LegislativeDistricts from './components/LegislativeDistricts';\nimport Splash from './components/Splash';\nimport StateJudicialCandidates from './components/StateJudicialCandidates';\nimport UsSenate from './components/UsSenate';\nimport VotingInElections from './components/VotingInElections';\n/* eslint-disable */\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\"> \n       <LeftMenu />\n        <Router>\n          <div>\n            <Switch>\n              {/* USERS */}\n              <Route exact path=\"/voteaz/\" component={ Splash }/>\n              <Route exact path=\"/voteaz/CongressionalDistricts\" component={ CongressionalDistricts }/>\n              <Route exact path=\"/voteaz/ElectionDates\" component={ ElectionDates }/>\n              <Route exact path=\"/voteaz/LegislativeDistricts\" component={ LegislativeDistricts }/>\n              <Route exact path=\"/voteaz/StateJudicialCandidates\" component={ StateJudicialCandidates }/>\n              <Route exact path=\"/voteaz/UsSenate\" component={ UsSenate }/>\n              <Route exact path=\"/voteaz/VotingInElections\" component={ VotingInElections }/>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { Provider } from 'react-redux';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}